on:
    push:
      paths-ignore:
        - "**.md"
    pull_request:
      paths-ignore:
        - "**.md"
  
name: Build binary
  
env:
  AS: nasm
  RUST_TOOLCHAIN: nightly-2023-08-28
  TOOLCHAIN_PROFILE: minimal
  
jobs:
    system_compile:
      name: Compile the vtpmtd.bin file
      runs-on: ubuntu-20.04
      timeout-minutes: 30
  
      steps:
        - name: Checkout vTPM-Td Sources
          uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

        - name: Initialize and update submodules
          run: |
            git config --global http.postBuffer 524288000
            git config --global http.sslVerify "false"
            git submodule update --init --recursive --depth 1
        
        - name: Install LLVM and Clang
          uses: KyleMayes/install-llvm-action@1a3da29f56261a1e1f937ec88f0856a9b8321d7e # v1
          with:
            version: "10.0"
            directory: ${{ runner.temp }}/llvm

        - name: install NASM
          uses: ilammy/setup-nasm@13cbeb366c45c4379d3478cdcbadd8295feb5028 # v1.5.1
        
        - name: Install tools for tpm-ref build
          run:  sudo apt-get install autoconf-archive pkg-config build-essential automake gcc libssl-dev ocaml ocamlbuild autoconf libtool wget python-is-python3 cmake perl gcc-multilib
 
        - name: Install toolchain
          uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
          with:
            profile: ${{ env.TOOLCHAIN_PROFILE }}
            toolchain: ${{ env.RUST_TOOLCHAIN }}
            override: true
            components: rust-src
  
        - name: Run cargo install cargo-xbuild
          uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1.0.3
          with:
            command: install
            args: cargo-xbuild
  
        - name: Preparation Work
          run: bash sh_script/pre-build.sh
  
        - name: Run cargo check
          run: |
            cargo check
  
        - name: Build vTPM-TD
          env:
            CC: clang
            AR: llvm-ar
          run: bash sh_script/build.sh